{"is_source_file": true, "format": "Python", "description": "This file defines a ProductRepository class providing CRUD operations for products, acting as a repository layer backed by an in-memory database. It includes methods for listing, retrieving, creating, updating, deleting, and checking existence of products.", "external_files": ["../models/product.py"], "external_methods": ["db.list_all", "db.get", "db.create", "db.update", "db.delete"], "published": ["product_repository"], "classes": [{"name": "ProductRepository", "description": "Repository layer providing CRUD operations for products."}], "methods": [{"name": "List[dict] list_products(self)", "description": "Returns all products as a list of dictionaries.", "scope": "ProductRepository", "scopeKind": "class"}, {"name": "Optional[dict] get_product(self, product_id: int)", "description": "Retrieves a product by id, returns None if not found.", "scope": "ProductRepository", "scopeKind": "class"}, {"name": "None create_product(self, product: dict)", "description": "Creates a new product; assumes id has been pre-validated for uniqueness.", "scope": "ProductRepository", "scopeKind": "class"}, {"name": "None update_product(self, product_id: int, product: dict)", "description": "Replaces an existing product identified by product_id.", "scope": "ProductRepository", "scopeKind": "class"}, {"name": "None delete_product(self, product_id: int)", "description": "Deletes a product by id; no-op if product not found.", "scope": "ProductRepository", "scopeKind": "class"}, {"name": "bool exists(self, product_id: int)", "description": "Checks if a product exists by id.", "scope": "ProductRepository", "scopeKind": "class"}], "calls": ["db.list_all", "db.get", "db.create", "db.update", "db.delete"], "search-terms": ["product_repository", "ProductRepository", "CRUD", "repository", "product", "database", "in-memory"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "ProductRepository", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^class ProductRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^    def create_product(self, product: dict) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, product: dict)", "scope": "ProductRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^    def delete_product(self, product_id: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, product_id: int)", "scope": "ProductRepository", "scopeKind": "class"}, {"_type": "tag", "name": "exists", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^    def exists(self, product_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, product_id: int)", "scope": "ProductRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^    def get_product(self, product_id: int) -> Optional[dict]:$/", "language": "Python", "typeref": "typename:Optional[dict]", "kind": "member", "signature": "(self, product_id: int)", "scope": "ProductRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_products", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^    def list_products(self) -> List[dict]:$/", "language": "Python", "typeref": "typename:List[dict]", "kind": "member", "signature": "(self)", "scope": "ProductRepository", "scopeKind": "class"}, {"_type": "tag", "name": "product_repository", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^product_repository = ProductRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_product", "path": "/home/kavia/workspace/code-generation/product-management-api-34229-34240/product_backend_api/src/api/repositories/product_repository.py", "pattern": "/^    def update_product(self, product_id: int, product: dict) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, product_id: int, product: dict)", "scope": "ProductRepository", "scopeKind": "class"}], "hash": "aefc504fe7e72146bdef317352af7078", "format-version": 4, "code-base-name": "product_backend_api", "filename": "product_backend_api/src/api/repositories/product_repository.py", "fields": [{"name": "product_repository = ProductRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}